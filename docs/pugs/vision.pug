doctype html
html
    head
        include includes/head.pug
    body
        header
            include includes/header.pug
        nav
            include includes/nav.pug
        aside.left
            include  includes/aside.pug
        aside.right

        main
            article
                h1 Vision
                blockquote(cite="ftp://publications.ai.mit.edu/ai-publications/pdf/AIM-858.pdf")
                    q
                        | For both biological systems and machines, vision begins with a large and
                        | unwieldy array of measurements of the amount of light reflected from
                        | surfaces in the environment. The goal of vision is to recover physical
                        | properties of objects in the scene, such as the location of object boundaries
                        | and the structure, color and texture of object surfaces, from the two-dimensional image
                        | that is projected onto the eye or camera. This goal is not
                        | achieved in a single step; vision proceeds in stages, with each stage
                        | producing increasingly more useful descriptions of the image and then the
                        | scene. The first clues about the physical properties of the scene are provided
                        | by the changes of intensity in the image.
                    p (Hildreth, 1985)

                section#vision-camera
                    h2 Camera
                    p
                        | Any vision system requires an input of data. In this case that will be a camera.
                        | Practically any camera can be used, as long as there is a way to
                        | (reliably) get the data from the camera to the computer for processing.
                    p
                        | A few examples of camera interfaces that can be used:
                        ul.fa-ul
                            li
                                span.fa-li
                                    i(class="fas fa-caret-right")
                                | USB
                            li
                                span.fa-li
                                    i(class="fas fa-caret-right")
                                | Ethernet
                            li
                                span.fa-li
                                    i(class="fas fa-caret-right")
                                | HDMI
                            li
                                span.fa-li
                                    i(class="fas fa-caret-right")
                                | SDI

                    h3 USB-camera
                    p
                        | However a USB-camera is in most cased the most convenient (and cheapest)
                        | option. These days USB-camera's can be easily found everywhere.
                        | From cheap webcams to CMOS-camera intended for use with microscopes.
                    p
                        | This system was developed and tested with a (cheap) Logitech USB-webcam.
                        | To illustrate that good result can be achieved even on moderate hardware.

                    h3 Raspberry Pi Camera module
                    p
                        | Due to the versatile nature of the library (an entire system). The computer-vision system can
                        | also be easily ran on a Raspberry Pi with the Raspberry Pi camera module.
                        br
                        | In order to achieve this, the camera interface has to be enabled, a few dependencies must be
                        | installed on the Raspberry Pi and a few line have to be changed in the program.
                        | These lines mostly have to do with the initialization of the camera object. The rest of the
                        | program stays unchanged.

                    h4 Enabling the camera interface
                    figure.generic_photo
                        img(src='assets/img/thesis/raspbian/rasbian_1.png'
                            alt='raspi-config'
                            onclick='open_modal("modal-box-1")')

                        figcaption raspi-config

                    .modal-box#modal-box-1(onclick='close_modal("modal-box-1")')
                        //.close-button(onclick='close_modal("modal-box-1")')
                        .image-modal-container
                            img(src='assets/img/thesis/raspbian/rasbian_1.png')
                            figcaption Raspberry Pi configuration screen
                    p
                        | The first thing that needs to be done in order to use the Raspberry Pi camera module is
                        | enable the camera interface. This can be done via the Raspbian configuration screen.
                        br
                        | This screen can be accessed by opening a terminal and calling the following command:
                    pre
                        code
                            | <span class="terminal-first-highlight">sudo</span> raspi-config
                    p
                        | This will open the configuration screen in the terminal, with a blue background. This screen
                        | can be navigated using both the keyboard and the mouse. Each setting has an associated
                        | keyboard shortcut that can be pressed for quicker navigation.
                        | The setting to enable the camera interface can be found under <em>interfacing options</em>.

                    figure.generic_photo
                        img(src='assets/img/thesis/raspbian/rasbian_2.png'
                            alt='raspi-config'
                            onclick='open_modal("modal-box-2")')

                        figcaption raspi-config

                    .modal-box#modal-box-2(onclick='close_modal("modal-box-2")')
                        //.close-button(onclick='close_modal("modal-box-2")')
                        .image-modal-container
                            img(src='assets/img/thesis/raspbian/rasbian_2.png')
                            figcaption Raspberry Pi configuration screen

                    h4 Dependencies for using the camera module

                section#vision-system
                    h2 System
                    .table-container
                        table
                            caption Minimum system requirements
                            tr
                                th Spec
                                th Value
                            tr
                                td RAM
                                td 1 GB
                            tr.alt
                                td CPU speed
                                td 1 GHz
                            tr
                                td CPU cores
                                td 2 cores
                            tr.alt
                                td Storage
                                td 8 GB

                section#vision-framework
                    h2 Framework

                    h3 Language
                    .generic-card.card-accent-1
                        blockquote(cite="ftp://publications.ai.mit.edu/ai-publications/pdf/AIM-858.pdf")
                            q
                                | Python is powerful... and fast;
                                br
                                | plays well with others;
                                br
                                | runs everywhere;
                                br
                                | is friendly & easy to learn;
                                br
                                | is Open.
                            p (The Python Software Foundation, sd)

                    p
                        | Python is an enormously popular programming language, especially in scientific context.
                        | As a result there are a lot of modules and libraries available. There is at least one for
                        | pretty much any application.
                    p Python can be found at: <a href="https://python.org" target="_blank">Python</a>.
                    p
                        | This language was chosen for various reasons. The most important one being the vast community
                        | and documentation Python has. Our previous knowledge of Python also helped chose this
                        | language.
                        | Python programs and reads easily, which makes it easy for others to read and modify the code.
                    p
                        | Because of the object-oriented approach of Python, the code can easily be split into several
                        | sections, each responsible for their own task.
                        | By splitting up the code into smaller sections, the code becomes easier to debug, modify and
                        | reuse.
                    p
                        | PyPi (<em>Python Package Index</em>) is Python's module-manager and it contains thousands of
                        | modules. These can be easily installed via PIP (<em>Package Installer for Python</em>).
                    p
                        | For this project Python 3 was used, specifically <em>Python 3.7.2 64bit</em>. At the moment
                        | of testing the software, this was the latest version.

                    h3 Libraries
                    p
                        | In order to make everything work as intended, a few libraries are required.
                        | Each library will be discussed with a bit of detail and background.
                    h4 NumPy
                    p
                        |  NumPy is a very powerful module, that is commonly used in scientific context for processing
                        | large amounts of data. The most known aspect of NumPy are the N-dimensional arrays
                        | (matrices). These array and operations on them are implemented in a really efficient way,
                        | making these really fast and efficient to use, even with larger arrays and multiple
                        | dimensions.
                    p
                        | Many of the other Python modules use NumPy to implement their datastructures. In this project
                        | NumPy is used to save the pixel-values of each frame and intermediate results.
                        | This allows to quickly isolate parts of the frame and further process them.
                    p
                        | NumPy can be installed using the following command:
                    pre
                        code
                            | <span class="terminal-first-highlight">pip</span> install numpy
                    h4 Imutils
                    p
                        | Imutils os a relatively small module for Python. This module simplifies moving, rotationg and
                        | scaling images. There is also a functionality to correctly format the contours, found by
                        | OpenCV. It is this functionality that is being used in the program.
                    pre
                        code
                            | <span class="terminal-first-highlight">pip</span> install imutils
                    h4 OpenCV
                    p
                        | To read in the frames and process them, OpenCV (<em>Open source Computer Vision library</em>)
                        | is used. This is a library for image processing and -recognition. OpenCv is a popular library,
                        | used by companies such as Google, Microsoft, Intel, IBM and Sony.
                    p
                        | A few of the application where OpenCV is used include:
                        ul.fa-ul
                            li
                                span.fa-li
                                    i(class="fas fa-caret-right")
                                | Processing and stitching the images for Google Streetview.
                            li
                                span.fa-li
                                    i(class="fas fa-caret-right")
                                | Monitoring of mining equipment in China
                            li
                                span.fa-li
                                    i(class="fas fa-caret-right")
                                | Detecting potential drownings in pools
                            li
                                span.fa-li
                                    i(class="fas fa-caret-right")
                                | Checking runways for debris
                    p
                        | OpenCV can be used in C++, Python, Java and MATLAB and on different platforms, including
                        | Windows and Linux.
                    p
                        | OpenCV itself has been written in C++ and has to be compiled before it can be used in Python.
                        | Luckily there is a pre-compiled version available on PyPi. This version can be easily
                        | installed via PIP.
                        br
                        | It is officially supported and maintained by the OpenCV developers, but is really easy to use.
                        | There is less control over the installation, as no option can be changed during the
                        | compilation. In most cases, however, this is also not needed. This will also reduce the
                        | chances for errors during the installation.

                    p
                        | OpenCV can be installed, via PIP, using the following command:

                    pre
                        code
                            | <span class="terminal-first-highlight">pip</span> install opencv-python
                    p
                        | This will always install the latest version. For this project OpenCV version 4.0.0 was used.
                        | A specific version can be installed by specifying which version pip should install.
                    pre
                        code
                            | <span class="terminal-first-highlight">pip</span> install opencv-python <span class="terminal-number">4.0.0.21</span>
                    p
                        | The program was tested with newer version of OpenCV, so this should pose no problems.
                    p
                        | Both commands will install the same distribution that was used during the development of the
                        | program. There are different distributions available of OpenCV on PyPi. All of these can be
                        | easily installed.
                    p
                        | The difference between them, lays in the functionality they offer. The first distribution is
                        | the standard one, it has all the built-in functionality that OpenCV would normally have, if
                        | compiled it yourself.
                    p
                        | The distributions with <em>contrib</em> in their name, contain functionality that was written
                        | and developed by the community. These versions contain a lot more functionality but are also
                        | larger to install.
                    p
                        | The distributions with <em>headless</em> in their name, contain all functionality to process
                        | the frames, but they have no visualisation capabilities. They cannot display the results.
                        | These distributions are ideal to install on machines with no monitor attached, or machines
                        | that are controlled via a text-only interface (like the command-line or SSH).

                    ul.fa-ul
                        li
                            span.fa-li
                                i(class="fas fa-caret-right")
                            | opencv-python
                        li
                            span.fa-li
                                i(class="fas fa-caret-right")
                            | opencv-contrib-python
                        li
                            span.fa-li
                                i(class="fas fa-caret-right")
                            | opencv-python-headless
                        li
                            span.fa-li
                                i(class="fas fa-caret-right")
                            | opencv-contrib-python-headless
                    p
                        | Since OpenCV itself is used for the visualisation of the results, in this project and no extra
                        | functionality is needed, the standard distribution can be installed.

                    h4 Paho MQTT
                    pre
                        code
                            | <span class="terminal-first-highlight">pip</span> install paho-mqtt
                    h4 The Python Standard Library
                    p text
                    h4 PiCamera[array]
                    pre
                        code
                            | <span class="terminal-first-highlight">pip</span> install <span class="terminal-string">"picamera[array]"</span>

                section#vision-program
                    h2 Program
                    h3 Structure
                    h3 Import libraries
                    .gist_container
                        script(src='https://gist.github.com/pcassima/52e732a9dd9516d296491bad7ec8bd18.js')
                        //label Importing the libraries
                    h3 Classes
                    h4 Webcam class
                    h3 Functions
                    h3 Main

            div
                .bottom_navbar
                    .back
                        a(href="outline.html") &#171; back
                .bottom_navbar
                    .next
                        a(href="linefollower.html") next &#187;

        footer
            include includes/footer.pug