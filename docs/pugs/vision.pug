doctype html
html(lang="en")
    head
        include includes/head.pug

    body
        header
            include includes/header.pug
        nav
            include includes/nav.pug

        .page
            aside.left
                include includes/left-aside.pug
            main
                h1.page-title Vision
                blockquote(cite="ftp://publications.ai.mit.edu/ai-publications/pdf/AIM-858.pdf")
                    q
                        | For both biological systems and machines, vision begins with a large and
                        | unwieldy array of measurements of the amount of light reflected from
                        | surfaces in the environment. The goal of vision is to recover physical
                        | properties of objects in the scene, such as the location of object boundaries
                        | and the structure, color and texture of object surfaces, from the two-dimensional image
                        | that is projected onto the eye or camera. This goal is not
                        | achieved in a single step; vision proceeds in stages, with each stage
                        | producing increasingly more useful descriptions of the image and then the
                        | scene. The first clues about the physical properties of the scene are provided
                        | by the changes of intensity in the image.
                    p (Hildreth, 1985)
                article
                    .anchor#vision-camera
                    h1.article-title Camera
                    p
                        | Any vision system requires an input of data. In this case that will be a camera.
                        | Practically any camera can be used, as long as there is a way to
                        | (reliably) get the data from the camera to the computer for processing.
                    p
                        | A few examples of camera interfaces that can be used:
                        ul.fa-ul
                            li
                                span.fa-li
                                    i(class="fas fa-caret-right")
                                | USB
                            li
                                span.fa-li
                                    i(class="fas fa-caret-right")
                                | Ethernet
                            li
                                span.fa-li
                                    i(class="fas fa-caret-right")
                                | HDMI
                            li
                                span.fa-li
                                    i(class="fas fa-caret-right")
                                | SDI
                    section
                        h1.section-title USB-camera
                        p
                            | However a USB-camera is in most cased the most convenient (and cheapest)
                            | option. These days USB-camera's can be easily found everywhere.
                            | From cheap webcams to CMOS-camera intended for use with microscopes.
                        p
                            | This system was developed and tested with a (cheap) Logitech USB-webcam.
                            | To illustrate that good result can be achieved even on moderate hardware.
                    section
                        h1.section-title Raspberry Pi Camera module
                        p
                            | Due to the versatile nature of the library (an entire system). The computer-vision system
                            | can also be easily ran on a Raspberry Pi with the Raspberry Pi camera module.
                            br
                            | In order to achieve this, the camera interface has to be enabled, a few dependencies must
                            | be installed on the Raspberry Pi and a few line have to be changed in the program.
                            | These lines mostly have to do with the initialization of the camera object. The rest of
                            | the program stays unchanged.
                        h1.section-subtitle Enabling the camera interface

                        figure.center-aligned.half-width
                            img(src="assets/img/thesis/raspbian/rasbian_1.png"
                                alt="raspi-config")
                            figcaption
                                a(href="#") raspi-config
                                br
                                | &copy; 2019
                        p
                            | The first thing that needs to be done in order to use the Raspberry Pi camera module is
                            | enable the camera interface. This can be done via the Raspbian configuration screen.
                            br
                            | This screen can be accessed by opening a terminal and calling the following command:
                        .code-container
                            code
                                | <span class="terminal-first-highlight">sudo</span>
                                | raspi-config
                        p
                            | This will open the configuration screen in the terminal, with a blue background. This
                            | screen can be navigated using both the keyboard and the mouse. Each setting has an
                            | associated keyboard shortcut that can be pressed for quicker navigation.
                            | The setting to enable the camera interface can be found under
                            | <em>interfacing options</em>.

                        figure.center-aligned.half-width
                            img(src="assets/img/thesis/raspbian/rasbian_2.png"
                                alt="raspi-config")
                            figcaption
                                a(href="#") raspi-config
                                br
                                | &copy; 2019

                article
                    .anchor#vision-system
                    h1.article-title System
                    section
                        h1.section-title Minimum system requirements
                        .table-container
                            div
                                table
                                    caption Minimum system requirements
                                    tbody
                                        tr
                                            th Spec
                                            th Value
                                        tr
                                            td RAM
                                            td 1 GB
                                        tr.alt
                                            td CPU speed
                                            td 1 GHz
                                        tr
                                            td CPU cores
                                            td 2 cores
                                        tr.alt
                                            td Storage
                                            td 8 GB
                article
                    .anchor#vision-framework
                    h1.article-title Framework
                    section
                        h1.section-title Language
                        .card.left-aligned
                            blockquote(cite="ftp://publications.ai.mit.edu/ai-publications/pdf/AIM-858.pdf")
                                q
                                    | Python is powerful... and fast;
                                    br
                                    | plays well with others;
                                    br
                                    | runs everywhere;
                                    br
                                    | is friendly & easy to learn;
                                    br
                                    | is Open.
                                p (The Python Software Foundation, sd)
                        p
                            | Python is an enormously popular programming language, especially in scientific context.
                            | As a result there are a lot of modules and libraries available. There is at least one for
                            | pretty much any application.
                        p Python can be found at: <a href="https://python.org" target="_blank">Python</a>.
                        p
                            | This language was chosen for various reasons. The most important one being the vast
                            | community and documentation Python has. Our previous knowledge of Python also helped
                            | chose this language. Python programs and reads easily, which makes it easy for others to
                            | read and modify the code.
                        p
                            | Because of the object-oriented approach of Python, the code can easily be split into
                            | several sections, each responsible for their own task. By splitting up the code into
                            | smaller sections, the code becomes easier to debug, modify and reuse.
                        p
                            | PyPi (<em>Python Package Index</em>) is Python's module-manager and it contains thousands
                            | of modules. These can be easily installed via PIP (<em>Package Installer for Python</em>).
                        p
                            | For this project Python 3 was used, specifically <em>Python 3.7.2 64bit</em>. At the
                            | moment of testing the software, this was the latest version.
                    section
                        h1.section-title Libraries
                        h1.section-subtitle NumPy
                        p
                            |  NumPy is a very powerful module, that is commonly used in scientific context for
                            | processing large amounts of data. The most known aspect of NumPy are the N-dimensional
                            | arrays (matrices). These array and operations on them are implemented in a really
                            | efficient way, making these really fast and efficient to use, even with larger arrays and
                            | multiple dimensions.
                        p
                            | Many of the other Python modules use NumPy to implement their data-structures. In this
                            | project NumPy is used to save the pixel-values of each frame and intermediate results.
                            | This allows to quickly isolate parts of the frame and further process them.
                        p
                            | NumPy can be installed using the following command:
                        .code-container
                            code
                                | <span class="terminal-first-highlight">pip</span>
                                | <span class="terminal-second-highlight">install</span>
                                | numpy
                        h1.section-subtitle Imutils
                        p
                            | Imutils os a relatively small module for Python. This module simplifies moving, rotating
                            | and scaling images. There is also a functionality to correctly format the contours, found
                            | by OpenCV. It is this functionality that is being used in the program.

                        .code-container
                            code
                                | <span class="terminal-first-highlight">pip</span>
                                | <span class="terminal-second-highlight">install</span>
                                | imutils
                        h1.section-subtitle OpenCV
                        p
                            | To read in the frames and process them, OpenCV (<em>Open source Computer Vision library</em>)
                            | is used. This is a library for image processing and -recognition. OpenCv is a popular library,
                            | used by companies such as Google, Microsoft, Intel, IBM and Sony.
                        p
                            | A few of the application where OpenCV is used include:
                            ul.fa-ul
                                li
                                    span.fa-li
                                        i(class="fas fa-caret-right")
                                    | Processing and stitching the images for Google Streetview.
                                li
                                    span.fa-li
                                        i(class="fas fa-caret-right")
                                    | Monitoring of mining equipment in China
                                li
                                    span.fa-li
                                        i(class="fas fa-caret-right")
                                    | Detecting potential drownings in pools
                                li
                                    span.fa-li
                                        i(class="fas fa-caret-right")
                                    | Checking runways for debris
                        p
                            | OpenCV can be used in C++, Python, Java and MATLAB and on different platforms, including
                            | Windows and Linux.
                        p
                            | OpenCV itself has been written in C++ and has to be compiled before it can be used in
                            | Python. Luckily there is a pre-compiled version available on PyPi. This version can be
                            | easily installed via PIP.
                            br
                            | It is officially supported and maintained by the OpenCV developers, but is really easy to
                            | use. There is less control over the installation, as no option can be changed during the
                            | compilation. In most cases, however, this is also not needed. This will also reduce the
                            | chances for errors during the installation.

                        p
                            | OpenCV can be installed, via PIP, using the following command:
                        .code-container
                            code
                                | <span class="terminal-first-highlight">pip</span>
                                | <span class="terminal-second-highlight">install</span>
                                | opencv-python
                        p
                            | This will always install the latest version. For this project OpenCV version 4.0.0 was
                            | used. A specific version can be installed by specifying which version pip should install.
                        .code-container
                            code
                                | <span class="terminal-first-highlight">pip</span>
                                | <span class="terminal-second-highlight">install</span>
                                | opencv-python
                                | <span class="terminal-number">4.0.0.21</span>
                        p
                            | The program was tested with newer version of OpenCV, so this should pose no problems.
                        p
                            | Both commands will install the same distribution that was used during the development of
                            | the program. There are different distributions available of OpenCV on PyPi. All of these
                            | can be easily installed.
                        p
                            | The difference between them, lays in the functionality they offer. The first distribution
                            | is the standard one, it has all the built-in functionality that OpenCV would normally
                            | have, if compiled it yourself.
                        p
                            | The distributions with <em>contrib</em> in their name, contain functionality that was
                            | written and developed by the community. These versions contain a lot more functionality
                            | but are also larger to install.
                        p
                            | The distributions with <em>headless</em> in their name, contain all functionality to
                            | process the frames, but they have no visualisation capabilities. They cannot display the
                            | results. These distributions are ideal to install on machines with no monitor attached,
                            | or machines that are controlled via a text-only interface (like the command-line or SSH).

                        ul.fa-ul
                            li
                                span.fa-li
                                    i(class="fas fa-caret-right")
                                | opencv-python
                            li
                                span.fa-li
                                    i(class="fas fa-caret-right")
                                | opencv-contrib-python
                            li
                                span.fa-li
                                    i(class="fas fa-caret-right")
                                | opencv-python-headless
                            li
                                span.fa-li
                                    i(class="fas fa-caret-right")
                                | opencv-contrib-python-headless
                        p
                            | Since OpenCV itself is used for the visualisation of the results, in this project and no
                            | extra functionality is needed, the standard distribution can be installed.
                        h1.section-subtitle Paho MQTT
                        p
                            | Since the different parts of this project are connected together, via MQTT. A library is
                            | needed in order to connect to a broker and send the messages. For this purpose
                            | eclipse-paho was chosen. It is a lightweight module that does everything it is supposed
                            | to do.
                        p
                            | This module can be installed via the following command:
                        .code-container
                            code
                                | <span class="terminal-first-highlight">pip</span>
                                | <span class="terminal-second-highlight">install</span>
                                | paho-mqtt
                        h1.section-subtitle PiCamera
                        .code-container
                            code
                                | <span class="terminal-first-highlight">pip</span>
                                | <span class="terminal-second-highlight">install</span>
                                | <span class="terminal-string">"picamera[array]"</span>
                article
                    .anchor#vision-program
                    h1.article-title Program
                    section
                        h1.section-title Structure
                        p
                            | The program is written and organised to follow a logical order and to be readable.
                            | During the development, the program was often tested to the PEP8 standard
                            | (<em>Python Enhancement Proposal</em>). This standard contains all the rules to make
                            | Python code more readable, but also a few do's and dont's for programming.
                            | PEP8 makes sure that there is a clear distinction between the different parts of the
                            | programs like classes, functions etc.
                        p
                            | Every Python program (and file) starts with a docstring. This contains a description of
                            | what the program should do. This also contains a short description of variables,
                            | return-types and exceptions. These last ones are more applicable for a class' and a
                            | function's docstring.
                        p
                            | After the docstring come the import statements for all required libraries and classes.
                            | These can be both locally or globally installed libraries. Because the Python interpreter
                            | doesn't have much regard for the order of code; classes and functions can be placed
                            | anywhere in the document. The import statements do have to be placed as the first "real"
                            | code in a file. The docstring is a comment and isn't seen as code.
                            br
                            | If import statements are placed at the top of a file, error can occur where functionality
                            | isn't available when needed. As a result the program could crash.
                        p
                            | According to PEP8 it is recommended to separate the import statements from the Python
                            | Standard Library before any other import statements. They should be separated by a blank
                            | line.
                        p
                            | The global variables are placed after the import statements. Global variables are, in
                            | general but in Python especially, to be avoided. These can cause problems with
                            | multi-threading and parallel processes. OpenCV uses multi-threading to speed up the
                            | calculations. So far no problems have been encountered, because all other operations are
                            | executed in a single thread. Global variables can be avoided by implementing a custom
                            | data-structure as a class.
                        p
                            | Read-only variabelen, zoals metadata, zijn hier wel toegestaan. Hierdoor kunnen
                            | modules beter geïdentificeerd worden. Volgens de PEP8-standaard krijgen deze
                            | variabelen een naam die begint en eindigt met “__” (twee underscores).
                        p
                            | Vervolgens komen de klassen, elk met hun eigen docstring en eventuele metadata.
                            | Elke klasse heeft minstens één methode nodig; de constructor. Deze wordt
                            | aangeduid door __init__.
                        .gist-container
                            script(src="https://gist.github.com/pcassima/31ae639e22f40b94ddc4201fe08d3376.js")

                    section
                        h1.section-title Importing libraries
                        .gist-container
                            script(src='https://gist.github.com/pcassima/52e732a9dd9516d296491bad7ec8bd18.js')
                            //label Importing the libraries
                    section
                        h1.section-title Classes
                        h1.section-subtitle Webcam class
                        .gist-container
                            script(src="https://gist.github.com/pcassima/08efda5b1962fc37315f10fb33d37cd3.js")
                    section
                        h1.section-title Functions
                        h1.section-subtitle order_66()
                        h1.section-subtitle finished()
                        h1.section-subtitle name_colour()
                    section
                        h1.section-title Main
                        h1.section-subtitle Read a frame
                        h1.section-subtitle Convert to greyscale
                        h1.section-subtitle Gaussian blur
                        h1.section-subtitle Threshold
                        h1.section-subtitle Canny Edge Detection
                        h1.section-subtitle Contours
                        h1.section-subtitle Count corners & determine shape
                        h1.section-subtitle Calculate centre of shape & determine colour
                        h1.section-subtitle Results

                .bottom-nav
                    .bottom-nav-left
                        .back
                            a(href="outline.html") &#171; back
                    .bottom-nav-right
                        .next
                            a(href="linefollower.html") next &#187;

            aside.right
                include includes/right-aside.pug
        footer
            include includes/footer.pug

